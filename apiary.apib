FORMAT: 1A
HOST: https://api.hootsuite.com/api/3

# Engagement API V3

SCUM Facade API V3

# Data Structures

## Message (object)
+ title: Message Title (string, optional) - Title of the message. [All]
+ body: Message body goes here. (string, required) - Body of the message. [All]

## ProfileSummary (object)
+ sourceNetwork: Twitter (enum[string], required)
+ profileId: 1234abc (string, optional)
+ name (string, optional)
+ avatarUrl (string, required)

## Link (object)
+ url: http://link.test (string, required) - URL that the link is pointing to. [All]
+ title: My link name (string, optional) - Display text for the link. [FB, G+, LI]
+ description: My link description (string, optional) - Description of the link. [LI]
+ previewImageUrl: http://preview.fake/preview.jpg (string, optional) - URL of image preview. [FB, G+, LI]
+ includeImagePreview: true (boolean, optional) - Whether to show the preview image. [FB, G+, LI]

## Video (object)
+ embedUrl: www.youtube.com/embed/ASDfjkzf (string, optional) - URL to an embeddable video. [YT]

## Image (object)
+ url: http://url.to.image/image.jpg (string, required) - URL to this image. [All]

## Media (object)
+ links (array[Link], optional) - Any links in the post. [FB, G+, LI, IG]
+ images (array[Image], optional) - Any images in the post. [FB, G+, LI, IG, TW]
+ videos (array[Video], optional) - Any videos in the post. [YT]

## Statistic (object)
+ sourceNetwork (enum[string], required) - source
+ type: likes (enum[string], required) - type of statistics
+ value (string, required) - value

## Status (object)
+ sourceNetwork: YouTube (enum[string], required) - source
+ type: videoStatus (string, required) - type of status
+ statusValue (string, required) - actual status
+ statusDescription (string, optional) - additional description

## Tag (object)
+ sourceNetwork (enum[string], required) - ['Twitter', 'Facebook', ...]
+ name (string, required) - actual tag

## Position (object)
+ latitude: 20.123 (number, required) - Latitude of this position. [TW, YT]
+ longitude: 40.123 (number, required) - Longitude of this position. [TW, YT]

## FacebookPlace (object)
+ pageId: asdfzv (string, required) - Page ID associated with this place. [FB]

## Place (object)
+ facebook (FacebookPlace, optional) - Facebook place information. [FB]

## Location (object)
+ position (Position, optional) - Position metadata. [TW, YT]
+ place (Place, optional) - Place metadata. [FB]

## Privacy (object)
+ sourceNetwork: YouTube (enum[string], required) - source
+ scope (enum[string], required) - [Public, DirectConnections, DirectAndSecondaryConnections, Private, Unlisted]
+ scopeIdSet (array[string], required) - array of ids related to scope restriction
+ hidden (boolean, optional)

## Targeting (object)
+ sourceNetwork: YouTube (enum[string], required) - source

## InReplyTo (object)
+ sourceNetwork: Twitter (enum[string], required)
+ objectType: post (enum[string], required) - ['post', 'comment']
+ objectId: abcd12345 (string, required) - Id of the post or comment or whatever

## Comment (object)
+ id: jksdfZJfiewrfVCW== (string, required) - ID of this comment. [All]
+ parent (InReplyTo, required) - defines the parent
+ message (Message, optional) - The message this comment contains. [All]
+ media (Media, optional) - Any media contained within this comment. [All]
+ author (ProfileSummary, required) - The author of this comment. [All]
+ privacy (Privacy, optional) - The privacy settings of this comment. [FB]
+ statistics (array[Statistic], required) - stats object
+ currentUserRating (enum[string], optional) - What is in enum?
+ createdDate: `2015-09-04T14:26:16.000Z` (string, optional) - ISO formatted DateTime that this comment was created. [All]

## CommentList (object)
+ comments (array[Comment], required) - actual comments
+ pagingResponse (PagingResponse, required) - paging


## Post (object)
+ id: zxcv1234 (string, required) - ID of the post of the social network. [All]
+ sourceNetwork: YouTube (enum[string], required) - Type of the message [All]
+ message (Message, optional) - Message of the post. [FB, G+, LI, IG, TW]
+ inReplyTo (InReplyTo, optional) - Information about the post this is replying to. [TW]
+ author (ProfileSummary, required)
+ commentList (CommentList, optional) - Comments
+ media (Media, optional) - Media contained within this post. [FB, G+, LI, IG, TW, YT]
+ statistics (array[Statistic], required) - Information about likes, shares, views, etc. for this post. [All]
+ location (Location, optional) - Location metadata about the post. [FB, TW, YT]
+ status (Status, optional) - Status of the post [YT]
+ tags (array[Tag], optional) - Post tags
+ privacy (Privacy, optional) - Privacy information about the post. [FB, LI, TW, YT]
+ targeting (Targeting, optional) - Advertising targeting information about the post. [FB, LI, TW]
+ currentUserRating (string, optional) - What is this?
+ createdDate: 2015-09-04T14:26:16.000Z (string, optional) - ISO date of when the post was created. [All]

## PagingResponse (object)
+ nextPageToken: akjvzSDFijwefADSC== (string, required) - Token used to retrieve the next page.
+ previousPageToken: WIDJFjkafF== (string, optional) - Token used to retrieve the previous page, if available.

## Results (object)
+ posts (array[Post], required) - Array of posts matching the stream type.
+ paging (PagingResponse, optional) - Paging information that can be used in subsequent requests.

## Error (object)


## Posts Collection [/posts]

### Get posts [GET /posts/{socialProfileId}{?type}{?pageSize}{?pageToken}]
+ Parameters
    + socialProfileId (string, required) - Social profile ID of the user performing this search. [All]
    + type (string, required) - Type of posts to be collected and returned. Valid values are:
    
        * Y_MY_CHANNEL - Posts from My Channel. [YT]
        
    + pageSize (number, required) - number of posts per page
    + pageToken (string, required) - Page token
        
+ Response 200 (application/json)
    + Attributes
        + request: /api/3/posts/150332989?type=Y_MY_CHANNEL
        + results (Results, required) - Result object
        + error (Error, required) - Error object
